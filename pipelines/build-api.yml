## Azure DevOps pipeline: Build & Deploy .NET 8 Web API to Azure App Service
## Adjust the variables below (at minimum: webAppName, azureServiceConnection). Keep secrets in Variable Groups or Library (not here).

trigger:
	branches:
		include:
			- main
	paths:
		include:
			- backend/src/lrembecki.obsluga-it.api/

pr:
	branches:
		include:
			- main

############################
# Variables
############################
variables:
	# Name of the Azure Resource Manager service connection (Service connection > New service connection > Azure Resource Manager)
	azureServiceConnection: '<SET-SERVICE-CONNECTION-NAME>'
	# Azure Web App (App Service) name to deploy to
	webAppName: '<SET-APP-SERVICE-NAME>'
	# (Optional) Deployment slot; leave empty or remove if not using slots
	webAppSlot: ''
	projectFile: 'backend/src/lrembecki.obsluga-it.api/lrembecki.obsluga-it.api.csproj'
	buildConfiguration: 'Release'
	publishDir: '$(Build.ArtifactStagingDirectory)/publish'
	artifactName: 'api-publish'
	dotnetVersion: '8.0.x'

############################
# Stages
############################
stages:
	- stage: Build
		displayName: Build & Test
		jobs:
			- job: Build
				displayName: Restore, Build, Test, Publish
				pool:
					vmImage: 'ubuntu-latest'
				steps:
					- task: UseDotNet@2
						displayName: 'Use .NET SDK $(dotnetVersion)'
						inputs:
							packageType: 'sdk'
							version: '$(dotnetVersion)'

					- task: DotNetCoreCLI@2
						displayName: Restore
						inputs:
							command: 'restore'
							projects: '$(projectFile)'

					- task: DotNetCoreCLI@2
						displayName: Build
						inputs:
							command: 'build'
							projects: '$(projectFile)'
							arguments: '--configuration $(buildConfiguration) --no-restore'

					# Unit tests (adjust path if more test projects are added)
					- task: DotNetCoreCLI@2
						displayName: Test (Unit Tests)
						continueOnError: false
						inputs:
							command: 'test'
							projects: 'backend/tests/lrembecki.obsluga-it.unit-tests/lrembecki.obsluga-it.unit-tests.csproj'
							arguments: '--configuration $(buildConfiguration) --no-build --collect "XPlat Code Coverage"'
							publishTestResults: true

					# (Optional) Integration tests - enable when ready
					# - task: DotNetCoreCLI@2
					#   displayName: Test (Integration Tests)
					#   inputs:
					#     command: 'test'
					#     projects: 'backend/tests/lrembecki.obsluga-it.integration-tests/lrembecki.obsluga-it.integration-tests.csproj'
					#     arguments: '--configuration $(buildConfiguration) --no-build'

					- task: DotNetCoreCLI@2
						displayName: Publish
						inputs:
							command: 'publish'
							publishWebProjects: false
							projects: '$(projectFile)'
							arguments: '--configuration $(buildConfiguration) --no-build --output $(publishDir)'
							zipAfterPublish: false

					- task: ArchiveFiles@2
						displayName: Archive published output
						inputs:
							rootFolderOrFile: '$(publishDir)'
							includeRootFolder: false
							archiveType: zip
							archiveFile: '$(Build.ArtifactStagingDirectory)/$(artifactName).zip'
							replaceExistingArchive: true

					- task: PublishBuildArtifacts@1
						displayName: Publish artifact
						inputs:
							PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(artifactName).zip'
							ArtifactName: '$(artifactName)'
							publishLocation: 'Container'

	# - stage: Deploy
	# 	displayName: Deploy to Azure Web App
	# 	dependsOn: Build
	# 	condition: succeeded()
	# 	jobs:
	# 		- deployment: DeployWebApp
	# 			displayName: Deploy $(webAppName)
	# 			environment: 'production'
	# 			strategy:
	# 				runOnce:
	# 					deploy:
	# 						steps:
	# 							- download: current
	# 								displayName: Download build artifact
	# 								artifact: $(artifactName)

	# 							- task: AzureWebApp@1
	# 								displayName: Deploy to App Service
	# 								inputs:
	# 									azureSubscription: '$(azureServiceConnection)'
	# 									appType: 'webApp'
	# 									appName: '$(webAppName)'
	# 									package: '$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip'
	# 									# Uncomment if using slot:
	# 									# deployToSlotOrASE: true
	# 									# resourceGroupName: '<OPTIONAL-RG-NAME>'
	# 									# slotName: '$(webAppSlot)'
	# 									enableCustomDeployment: false
	# 									runtimeStack: 'DOTNETCORE|8.0'
	# 									takeAppOfflineFlag: true
	# 									useWebDeploy: false

	# 							# (Optional) warmup / health check script can be added here

############################
# Notes
# - Set pipeline variables (or variable group) for: azureServiceConnection, webAppName.
# - Ensure the service connection has permission to the target App Service.
# - Remove placeholder values before running.
# - Add secrets (e.g., connection strings) via App Service Configuration or Azure Key Vault references.
############################

