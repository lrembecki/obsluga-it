## Azure DevOps pipeline: Build & Deploy .NET 8 Web API to Azure App Service
## Adjust the variables below (at minimum: webAppName, azureServiceConnection). Keep secrets in Variable Groups or Library (not here).

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - backend

pr:
  branches:
    include:
    - main

variables:
- name: projectFile
  value: 'backend'
- name: testProjects
  value: 'backend/tests/**/*.csproj'
- name: buildConfiguration
  value: 'Release'
- name: dotnetVersion
  value: '8.0.x'

stages:
- stage: build
  jobs:
  - job: build
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetVersion)'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetVersion)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '$(projectFile)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '$(projectFile)'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    # - task: DotNetCoreCLI@2
    #   displayName: Test
    #   inputs:
    #     command: 'test'
    #     projects: '$(testProjects)'
    #     arguments: '--configuration $(buildConfiguration) --no-build --collect "XPlat Code Coverage"'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: '$(testProjects)'
        arguments: '--verbosity diag --configuration $(buildConfiguration) --no-build --collect "XPlat Code Coverage" --results-directory $(Agent.TempDirectory)/TestResults'
        publishTestResults: true

    - task: PublishTestResults@2
      displayName: 'Publish test results'
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/*.trx'
        searchFolder: '$(Agent.TempDirectory)/TestResults'
        mergeTestResults: true
        failTaskOnFailedTests: true

    - task: PublishCodeCoverageResults@2
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)'
        failIfCoverageEmpty: true
